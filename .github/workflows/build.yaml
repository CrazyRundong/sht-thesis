name: build

on:
  - push
  - pull_request

env:
  CTAN_URL: http://mirror.ctan.org
  NOTO_URL: https://noto-website-2.storage.googleapis.com/pkgs
  SARASA_URL: https://github.com/be5invis/Sarasa-Gothic/releases/download/v0.12.11/sarasa-gothic-ttc-0.12.11.7z
  SED_REP_WITH_CLS_ARGS: s/\\documentclass\[\(.*\)\]/\\documentclass\[\1, fontset=none\]/
  DOC_DEPENDENCE: ctable listings hologo libertinus-fonts tex-gyre-math 

jobs:
  build-ubuntu:
    name: Build on Ubuntu
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.head_commit.message, '[ci ubuntu]') || !contains(github.event.head_commit.message, '[ci skip]') }}
    steps:
      - uses: actions/checkout@v2
      - name: Install Noto and Sarasa fonts
        run: |
          sudo apt-get update
          sudo apt-get install --yes fonts-noto-cjk fonts-noto-cjk-extra
          curl -OL ${{ env.SARASA_URL }} && 7z x sarasa-*.7z && mkdir -p $HOME/.fonts && mv *.ttc $HOME/.fonts/
      - name: Install TeX Live
        run: |
          export PATH=/tmp/texlive/bin/x86_64-linux:$PATH
          curl -OL ${{ env.CTAN_URL }}/systems/texlive/tlnet/install-tl-unx.tar.gz
          tar -zxf install-tl-unx.tar.gz
          pushd install-tl-20* && chmod +x install-tl
          ./install-tl --profile ../.github/workflows/texlive.profile --repository ${{ env.CTAN_URL }}/systems/texlive/tlnet/
          popd
          echo "$(cat DEPENDS.txt | tr '\n' ' ') ${{ env.DOC_DEPENDENCE }}" | xargs tlmgr install 
          echo "::set-env name=PATH::/tmp/texlive/bin/x86_64-linux:$PATH"
      - name: Build class and document
        run: |
          sed -i '${{ env.SED_REP_WITH_CLS_ARGS }}' shtthesis-example.tex
          make
  build-macos:
    name: Build on macOS
    runs-on: macos-latest
    if: ${{ contains(github.event.head_commit.message, '[ci macos]') || !contains(github.event.head_commit.message, '[ci skip]') }}
    steps:
      - uses: actions/checkout@v2
      - name: Install utilities
        run: |
          brew install gnu-sed
      - name: Install Noto and Sarasa fonts
        run: |
          for i in NotoSerifCJK NotoSansCJK; do curl -O ${{ env.NOTO_URL }}/$i.ttc.zip; done
          unzip -o "*.zip"
          curl -OL ${{ env.SARASA_URL }} && 7z x sarasa-*.7z
          cp -vf *.ttc /Library/Fonts/
      - name: Install TeX Live
        run: |
          export PATH=/tmp/texlive/bin/x86_64-darwin:$PATH
          curl -OL ${{ env.CTAN_URL }}/systems/texlive/tlnet/install-tl-unx.tar.gz
          tar -zxf install-tl-unx.tar.gz
          pushd install-tl-20* && chmod +x install-tl
          ./install-tl --profile ../.github/workflows/texlive.profile --repository ${{ env.CTAN_URL }}/systems/texlive/tlnet/
          popd
          echo "$(cat DEPENDS.txt | tr '\n' ' ') ${{ env.DOC_DEPENDENCE }}" | xargs tlmgr install 
          echo "::set-env name=PATH::/tmp/texlive/bin/x86_64-darwin:$PATH"
      - name: Build class and document
        run: |
          gsed -i '${{ env.SED_REP_WITH_CLS_ARGS }}' shtthesis-example.tex
          make
  build-windows:
    runs-on: windows-latest
    name: Build on Windows
    if: ${{ contains(github.event.head_commit.message, '[ci windows]') || !contains(github.event.head_commit.message, '[ci skip]') }}
    steps:
      - uses: actions/checkout@v2
      - name: Install utilities
        run: |
          choco install sed make
          choco install ghostscript --version=9.52
          $util_path = "C:\Program Files\gs\gs9.52\bin;" + ${env:PATH}
          echo "::set-env name=PATH::$util_path"
      - name: Install TeX Live
        run: |
          ${env:PATH} = "${{ github.workspace }}\tmp\texlive\bin\win32;" + ${env:PATH}
          Invoke-WebRequest -Uri ${{ env.CTAN_URL }}/systems/texlive/tlnet/install-tl.zip -OutFile install-tl.zip
          Invoke-WebRequest -Uri ${{ env.CTAN_URL }}/systems/win32/w32tex/TLW64/tl-win64.zip -OutFile tl-win64.zip
          Expand-Archive install-tl.zip -DestinationPath .
          Push-Location install-tl-*
          .\install-tl-windows --no-gui --profile ..\.github\workflows\texlive-win.profile --repository ${{ env.CTAN_URL }}/systems/texlive/tlnet/
          Pop-Location
          &tlmgr install @((Get-Content ./DEPENDS.txt) + "${{ env.DOC_DEPENDENCE }}".split())
          Expand-Archive tl-win64.zip -DestinationPath ${{ github.workspace }}\tmp\texlive
          $tl_path_w64 = "${{ github.workspace }}\tmp\texlive\bin\win64;" + "${{ github.workspace }}\tmp\texlive\bin\win32;" + ${env:PATH}
          echo "::set-env name=PATH::$tl_path_w64"
      - name: Install Noto and Sarasa fonts
        run: |
          "NotoSerifCJK", "NotoSansCJK" | ForEach-Object -Process {Invoke-WebRequest -Uri "${{ env.NOTO_URL }}/$_.ttc.zip" -OutFile "$_.ttc.zip"}
          Get-ChildItem *.ttc.zip | Expand-Archive -DestinationPath . -Force
          Invoke-WebRequest -Uri ${{ env.SARASA_URL }} -OutFile sarasa-gothic-ttc-0.12.11.7z
          7z x sarasa-gothic-ttc-0.12.11.7z
          Copy-Item *.ttc C:\Windows\Fonts
          fc-cache -fsv
          luaotfload-tool -fuv
      - name: Build class and document
        run: |
          sed -i '${{ env.SED_REP_WITH_CLS_ARGS }}' shtthesis-example.tex
          make
